// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VK1.SCGE.Safety.Services.Data;

namespace VK1.SCGE.Safety.Services.Migrations
{
    [DbContext(typeof(AppDb))]
    partial class AppDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VK1.SCGE.Safety.Models.AreaCondition", b =>
                {
                    b.Property<int>("AreaConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("AreaConditionId");

                    b.ToTable("AreaConditions");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Branch", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("BranchManager")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("BranchCode");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.CardControl", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("CardControls");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Carrier", b =>
                {
                    b.Property<int>("CarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("CarrierId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.CorrectiveActionRequest", b =>
                {
                    b.Property<string>("CARCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CARStatusCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CARStatusName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PdfPath")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewerDepartment")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ViewerDivision")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ViewerEmail")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ViewerName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CARCode");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CARStatusCode");

                    b.HasIndex("VehicleId");

                    b.ToTable("CorrectiveActionRequests");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.CorrectiveActionRequestItem", b =>
                {
                    b.Property<int>("CARItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CARCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FixedBy")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("FixedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TruckInspectionCardDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TruckInspectionCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("TruckInspectionCategoryName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("TruckInspectionItemId")
                        .HasColumnType("int");

                    b.Property<string>("TruckInspectionItemName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CARItemId");

                    b.HasIndex("CARCode");

                    b.HasIndex("TruckInspectionCardDetailId");

                    b.HasIndex("TruckInspectionCategoryId");

                    b.HasIndex("TruckInspectionItemId");

                    b.ToTable("CorrectiveActionRequestItems");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.CorrectiveActionRequestStatus", b =>
                {
                    b.Property<string>("CARStatusCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CARStatusCode");

                    b.ToTable("CorrectiveActionRequestStatuses");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.DeductPoint", b =>
                {
                    b.Property<int>("DeductPointId")
                        .HasColumnType("int");

                    b.Property<string>("DeductCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("DeductDescription")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("Warning")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("DeductPointId");

                    b.ToTable("DeductPoints");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BusinessUnitLevel2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BusinessUnitLevel3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BusinessUnitLevel4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BusinessUnitLevel5")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BusinessUnitLevel6")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameEN")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameTH")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupervisorCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupervisorEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SupervisorPosition")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("EmployeeCode");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.IncidentArea", b =>
                {
                    b.Property<int>("IncidentAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IncidentAreaId");

                    b.ToTable("IncidentAreas");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.IncidentDepot", b =>
                {
                    b.Property<int>("IncidentDepotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IncidentDepotId");

                    b.ToTable("IncidentDepots");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.IncidentRoad", b =>
                {
                    b.Property<int>("IncidentRoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IncidentRoadId");

                    b.ToTable("IncidentRoads");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.IncidentTruck", b =>
                {
                    b.Property<int>("IncidentTruckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IncidentTruckId");

                    b.ToTable("IncidentTrucks");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.IncidentTruckPositon", b =>
                {
                    b.Property<int>("IncidentTruckPositonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IncidentTruckPositonId");

                    b.ToTable("IncidentTruckPositons");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.InvestigateCard", b =>
                {
                    b.Property<Guid>("InvestigateCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvestigateStatusCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("InvestigateCardId");

                    b.HasIndex("InvestigateStatusCode");

                    b.ToTable("InvestigateCards");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.InvestigateStatus", b =>
                {
                    b.Property<string>("InvestigateStatusCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("InvestigateStatusCode");

                    b.ToTable("InvestigateStatuses");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.LogEmployeeAccident", b =>
                {
                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<int>("IncaseOfDeduction")
                        .HasColumnType("int");

                    b.Property<int>("MaxNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeCode");

                    b.ToTable("LogEmployeeAccidents");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.LogNumber", b =>
                {
                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("MaxNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Prefix");

                    b.ToTable("LogNumbers");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("NewCustomerQty")
                        .HasColumnType("int");

                    b.Property<int>("NewOrderQty")
                        .HasColumnType("int");

                    b.Property<int>("OldCustomerQty")
                        .HasColumnType("int");

                    b.Property<int>("OldOrderQty")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartFive", b =>
                {
                    b.Property<int>("PartFiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InvestigateCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("PartFiveId");

                    b.HasIndex("InvestigateCardId")
                        .IsUnique();

                    b.ToTable("PartFives");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartFiveDetail", b =>
                {
                    b.Property<int>("PartFiveDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("PartFiveId")
                        .HasColumnType("int");

                    b.Property<string>("UnsafeCategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("UnsafeItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("PartFiveDetailId");

                    b.HasIndex("PartFiveId");

                    b.HasIndex("UnsafeCategoryCode");

                    b.HasIndex("UnsafeItemCode");

                    b.ToTable("PartFiveDetails");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartFour", b =>
                {
                    b.Property<int>("PartFourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaConditionDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("AreaConditionId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FallFromHeight")
                        .HasColumnType("int");

                    b.Property<string>("IncidentAreaDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("IncidentAreaId")
                        .HasColumnType("int");

                    b.Property<string>("IncidentDepotDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("IncidentDepotId")
                        .HasColumnType("int");

                    b.Property<string>("IncidentRoadDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("IncidentRoadId")
                        .HasColumnType("int");

                    b.Property<string>("IncidentTruckDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("IncidentTruckId")
                        .HasColumnType("int");

                    b.Property<string>("IncidentTruckPositionDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("IncidentTruckPositonId")
                        .HasColumnType("int");

                    b.Property<Guid>("InvestigateCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("TrafficId")
                        .HasColumnType("int");

                    b.Property<string>("WeatherDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("WeatherId")
                        .HasColumnType("int");

                    b.HasKey("PartFourId");

                    b.HasIndex("AreaConditionId");

                    b.HasIndex("IncidentAreaId");

                    b.HasIndex("IncidentDepotId");

                    b.HasIndex("IncidentRoadId");

                    b.HasIndex("IncidentTruckId");

                    b.HasIndex("IncidentTruckPositonId");

                    b.HasIndex("InvestigateCardId")
                        .IsUnique();

                    b.HasIndex("TrafficId");

                    b.HasIndex("WeatherId");

                    b.ToTable("PartFours");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartOne", b =>
                {
                    b.Property<int>("PartOneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccidentMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CaseLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("CaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<TimeSpan>("CaseTime")
                        .HasColumnType("time");

                    b.Property<string>("CaseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayExperience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverExperience")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("InvestigateCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("MonthExperience")
                        .HasColumnType("int");

                    b.Property<string>("OtherBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("SolutionHour")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TransportBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("YearExperience")
                        .HasColumnType("int");

                    b.HasKey("PartOneId");

                    b.HasIndex("BranchCode");

                    b.HasIndex("EmployeeCode");

                    b.HasIndex("InvestigateCardId")
                        .IsUnique();

                    b.HasIndex("PositionId");

                    b.HasIndex("RegionId");

                    b.HasIndex("VehicleId");

                    b.ToTable("PartOnes");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartSix", b =>
                {
                    b.Property<int>("PartSixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InvestigateCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ResponsePerson")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Solution")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("UnsafeItemCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("UnsafeItemName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("PartSixId");

                    b.HasIndex("InvestigateCardId");

                    b.HasIndex("UnsafeItemCode");

                    b.ToTable("PartSixes");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartThree", b =>
                {
                    b.Property<int>("PartThreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfterIncidentDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("BeforeIncidentDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ImageAfterIncidentName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ImageBeforeIncidenName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ImageIncidentAreaName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ImageIncidentName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("IncidentDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<Guid>("InvestigateCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("PartThreeId");

                    b.HasIndex("InvestigateCardId")
                        .IsUnique();

                    b.ToTable("PartThrees");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartTwo", b =>
                {
                    b.Property<int>("PartTwoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Camera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpInjure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpInjureDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EquipmentDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentDamageDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("GpsSpeed")
                        .HasColumnType("int");

                    b.Property<int?>("GpsSpeedLimit")
                        .HasColumnType("int");

                    b.Property<string>("IncidentRoute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InvestigateCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCctv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGps")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPassAlcohol")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPassSDC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPassSafetyCourse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductDamage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTruckInspectionNormal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastMaintenanceOdometer")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("LeaveBranchTime")
                        .HasColumnType("time");

                    b.Property<int?>("LeisureHour")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PartiesDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartiesDamageDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("PartiesDie")
                        .HasColumnType("int");

                    b.Property<string>("PartiesInjure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartiesInjureDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ProductDamageQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductDamageValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductPostpone")
                        .HasColumnType("int");

                    b.Property<int?>("ProductQty")
                        .HasColumnType("int");

                    b.Property<int?>("StopWorking")
                        .HasColumnType("int");

                    b.Property<int?>("ThirdPartiesDie")
                        .HasColumnType("int");

                    b.Property<string>("ThirdPartiesInjure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPartiesInjureDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Training")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckDamageDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TruckInspectionDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("PartTwoId");

                    b.HasIndex("InvestigateCardId")
                        .IsUnique();

                    b.ToTable("PartTwos");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PenaltyNotice", b =>
                {
                    b.Property<string>("PenaltyNoticeCode")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CaseCount")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("CaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeductDescription")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal>("DeductMoneyAccident")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DeductMoneyUnsafe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeductPointAccident")
                        .HasColumnType("int");

                    b.Property<int>("DeductPointUnsafe")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("IncidentDescription")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("InvestigateCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TruckDamageDescription")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Warning")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("PenaltyNoticeCode");

                    b.HasIndex("InvestigateCardId")
                        .IsUnique()
                        .HasFilter("[InvestigateCardId] IS NOT NULL");

                    b.ToTable("PenaltyNotices");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PenaltyNoticeDetail", b =>
                {
                    b.Property<int>("PenaltyNoticeDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("PenaltyNoticeCode")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("PenaltyNoticeDetailId");

                    b.HasIndex("PenaltyNoticeCode");

                    b.ToTable("PenaltyNoticeDetails");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("RegionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.SubContact", b =>
                {
                    b.Property<int>("SubContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GpsProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("SubContactId");

                    b.HasIndex("BranchCode");

                    b.HasIndex("Name");

                    b.HasIndex("RegionId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("SubContacts");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Traffic", b =>
                {
                    b.Property<int>("TrafficId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("TrafficId");

                    b.ToTable("Traffics");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.TruckInspectionCard", b =>
                {
                    b.Property<int>("TruckInspectionCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CardControlCode")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FinishedOdometer")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("NextCardTruckInspectionCardId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("StartOdometer")
                        .HasColumnType("int");

                    b.Property<int?>("TruckInspectionCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TruckInspectionCardId");

                    b.HasIndex("CardControlCode");

                    b.HasIndex("EmployeeCode");

                    b.HasIndex("InspectionDate");

                    b.HasIndex("NextCardTruckInspectionCardId");

                    b.HasIndex("TruckInspectionCategoryId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TruckInspectionCards");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.TruckInspectionCardDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNormal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("TruckInspectionCardId")
                        .HasColumnType("int");

                    b.Property<int>("TruckInspectionItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TruckInspectionCardId");

                    b.HasIndex("TruckInspectionItemId");

                    b.ToTable("TruckInspectionCardDetails");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.TruckInspectionCategory", b =>
                {
                    b.Property<int>("TruckInspectionCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("TruckInspectionCategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TruckInspectionCategories");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.TruckInspectionItem", b =>
                {
                    b.Property<int>("TruckInspectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstAndFifteenth")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMust")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("TruckInspectionCategoryId")
                        .HasColumnType("int");

                    b.HasKey("TruckInspectionItemId");

                    b.HasIndex("TruckInspectionCategoryId");

                    b.ToTable("TruckInspectionItems");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.UnsafeCategory", b =>
                {
                    b.Property<string>("UnsafeCategoryCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UnsafeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnsafeCategoryCode");

                    b.ToTable("UnsafeCategories");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.UnsafeItem", b =>
                {
                    b.Property<string>("UnsafeItemCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeductPoint")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UnsafeCategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("UnsafeItemCode");

                    b.HasIndex("UnsafeCategoryCode");

                    b.ToTable("UnsafeItems");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GpsProvider")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubContact")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("SubContactId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("PlateNumber")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.HasIndex("SubContactId")
                        .IsUnique()
                        .HasFilter("[SubContactId] IS NOT NULL");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Weather", b =>
                {
                    b.Property<int>("WeatherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("WeatherId");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Branch", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.CorrectiveActionRequest", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchCode");

                    b.HasOne("VK1.SCGE.Safety.Models.CorrectiveActionRequestStatus", "CorrectiveActionRequestStatus")
                        .WithMany()
                        .HasForeignKey("CARStatusCode");

                    b.HasOne("VK1.SCGE.Safety.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.CorrectiveActionRequestItem", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.CorrectiveActionRequest", "CorrectiveActionRequest")
                        .WithMany("Items")
                        .HasForeignKey("CARCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionCardDetail", "TruckInspectionCardDetail")
                        .WithMany()
                        .HasForeignKey("TruckInspectionCardDetailId");

                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionCategory", "TruckInspectionCategory")
                        .WithMany()
                        .HasForeignKey("TruckInspectionCategoryId");

                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionItem", "TruckInspectionItem")
                        .WithMany()
                        .HasForeignKey("TruckInspectionItemId");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.InvestigateCard", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateStatus", "InvestigateStatus")
                        .WithMany()
                        .HasForeignKey("InvestigateStatusCode");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartFive", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateCard", "InvestigateCard")
                        .WithOne("PartFive")
                        .HasForeignKey("VK1.SCGE.Safety.Models.PartFive", "InvestigateCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartFiveDetail", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.PartFive", "PartFive")
                        .WithMany("PartFiveDetails")
                        .HasForeignKey("PartFiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.UnsafeCategory", "UnsafeCategory")
                        .WithMany()
                        .HasForeignKey("UnsafeCategoryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.UnsafeItem", "UnsafeItem")
                        .WithMany()
                        .HasForeignKey("UnsafeItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartFour", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.AreaCondition", "AreaCondition")
                        .WithMany()
                        .HasForeignKey("AreaConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.IncidentArea", "IncidentArea")
                        .WithMany()
                        .HasForeignKey("IncidentAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.IncidentDepot", "IncidentDepot")
                        .WithMany()
                        .HasForeignKey("IncidentDepotId");

                    b.HasOne("VK1.SCGE.Safety.Models.IncidentRoad", "IncidentRoad")
                        .WithMany()
                        .HasForeignKey("IncidentRoadId");

                    b.HasOne("VK1.SCGE.Safety.Models.IncidentTruck", "IncidentTruck")
                        .WithMany()
                        .HasForeignKey("IncidentTruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.IncidentTruckPositon", "IncidentTruckPositon")
                        .WithMany()
                        .HasForeignKey("IncidentTruckPositonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateCard", "InvestigateCard")
                        .WithOne("PartFour")
                        .HasForeignKey("VK1.SCGE.Safety.Models.PartFour", "InvestigateCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.Traffic", "Traffic")
                        .WithMany()
                        .HasForeignKey("TrafficId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.Weather", "Weather")
                        .WithMany()
                        .HasForeignKey("WeatherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartOne", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateCard", "InvestigateCard")
                        .WithOne("PartOne")
                        .HasForeignKey("VK1.SCGE.Safety.Models.PartOne", "InvestigateCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartSix", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateCard", "InvestigateCard")
                        .WithMany("PartSixes")
                        .HasForeignKey("InvestigateCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.UnsafeItem", "UnsafeItem")
                        .WithMany()
                        .HasForeignKey("UnsafeItemCode");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartThree", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateCard", "InvestigateCard")
                        .WithOne("PartThree")
                        .HasForeignKey("VK1.SCGE.Safety.Models.PartThree", "InvestigateCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PartTwo", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateCard", "InvestigateCard")
                        .WithOne("PartTwo")
                        .HasForeignKey("VK1.SCGE.Safety.Models.PartTwo", "InvestigateCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PenaltyNotice", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.InvestigateCard", "InvestigateCard")
                        .WithMany()
                        .HasForeignKey("InvestigateCardId");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.PenaltyNoticeDetail", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.PenaltyNotice", "PenaltyNotice")
                        .WithMany("Items")
                        .HasForeignKey("PenaltyNoticeCode");
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.SubContact", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.TruckInspectionCard", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.CardControl", "CardControl")
                        .WithMany("Cards")
                        .HasForeignKey("CardControlCode");

                    b.HasOne("VK1.SCGE.Safety.Models.Employee", "Employee")
                        .WithMany("TruckInspectionCards")
                        .HasForeignKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionCard", "NextCard")
                        .WithMany()
                        .HasForeignKey("NextCardTruckInspectionCardId");

                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionCategory", null)
                        .WithMany("TruckInspectionCards")
                        .HasForeignKey("TruckInspectionCategoryId");

                    b.HasOne("VK1.SCGE.Safety.Models.Vehicle", "Vehicle")
                        .WithMany("TruckInspectionCards")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.TruckInspectionCardDetail", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionCard", "TruckInspectionCard")
                        .WithMany("TruckInspectionCardDetails")
                        .HasForeignKey("TruckInspectionCardId");

                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionItem", "TruckInspectionItem")
                        .WithMany()
                        .HasForeignKey("TruckInspectionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.TruckInspectionItem", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.TruckInspectionCategory", "TruckInspectionCategory")
                        .WithMany("TruckInspectionItems")
                        .HasForeignKey("TruckInspectionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.UnsafeItem", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.UnsafeCategory", "UnsafeCategory")
                        .WithMany()
                        .HasForeignKey("UnsafeCategoryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VK1.SCGE.Safety.Models.Vehicle", b =>
                {
                    b.HasOne("VK1.SCGE.Safety.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VK1.SCGE.Safety.Models.SubContact", "SubContact")
                        .WithOne("Vehicle")
                        .HasForeignKey("VK1.SCGE.Safety.Models.Vehicle", "SubContactId");
                });
#pragma warning restore 612, 618
        }
    }
}
